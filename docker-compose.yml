services:
  download:
    image: rclone/rclone
    volumes: &volumes
      - data:/data
      - type: bind
        source: .
        target: /project
        read_only: true
    working_dir: &working_dir
      /data/$BOOK_NAME
    entrypoint: ['/project/download.sh', $PAGES]
  title-page:
    image: alpine:3.14
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/title-page.sh']
  toc:
    image: msb140610/toc:0.3
    volumes: *volumes
    working_dir: *working_dir
    environment:
      - TOC_COLS=$TOC_COLS
      - TOC_ROWS=$TOC_ROWS
    entrypoint: ['/project/toc.sh']
  html-to-pdf:
    image: minidocks/weasyprint
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/html-to-pdf.sh']
  compile:
    image: mnuessler/pdftk
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/compile.sh']
  compress:
    # docker run -v "compile-songbook_data:/data" --rm -it --platform linux/amd64 ptspts/pdfsizeopt pdfsizeopt /data/cambridge-ukulele/compiled.pdf
    image: ptspts/pdfsizeopt
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/compress.sh']
  upload:
    image: rclone/rclone
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/copyto.sh', './compress.upload.done', $BOOK]
  publish:
    image: rclone/rclone
    volumes: *volumes
    working_dir: *working_dir
    entrypoint: ['/project/copyto.sh', './compress.publish.done', $PUBLISHING_TO]

volumes:
  data:
